import {
  __async
} from "./chunk-JPRRZPBL.js";
const getSessionFromNextAuth = (params) => __async(void 0, null, function* () {
  let coreCustomerUser = null;
  const session = yield params.nextAuth.auth();
  if (session == null ? void 0 : session.user) {
    if (params.nextAuth.customerFromAuth) {
      coreCustomerUser = yield params.nextAuth.customerFromAuth(session);
    } else if (!session.user.email) {
      throw new Error(
        "FlowgladError: NextAuth session has no email. Please provide an extractUserIdFromSession function to extract the userId from the session, or include email on your sessions."
      );
    } else {
      coreCustomerUser = {
        externalId: session.user.email,
        name: session.user.name || "",
        email: session.user.email || ""
      };
    }
  }
  return coreCustomerUser;
});
const sessionFromSupabaseAuth = (params) => __async(void 0, null, function* () {
  let coreCustomerUser = null;
  const {
    data: { user }
  } = yield (yield params.supabaseAuth.client()).auth.getUser();
  if (user) {
    coreCustomerUser = {
      externalId: user.id,
      name: user.user_metadata.name || "",
      email: user.email || ""
    };
  }
  return coreCustomerUser;
});
const getSessionFromParams = (params) => __async(void 0, null, function* () {
  let coreCustomerUser = null;
  if ("nextAuth" in params) {
    coreCustomerUser = yield getSessionFromNextAuth(params);
  }
  if ("supabaseAuth" in params) {
    coreCustomerUser = yield sessionFromSupabaseAuth(params);
  }
  return coreCustomerUser;
});
const parseErrorStringToErrorObject = (errorString) => {
  let [errorCode, ...errorJsonParts] = errorString.split(" ");
  if (isNaN(Number(errorCode))) {
    errorCode = "Unknown";
  }
  let errorJson = {};
  try {
    errorJson = JSON.parse(errorJsonParts.join(" "));
  } catch (e) {
    errorJson = {
      message: errorString
    };
  }
  return {
    code: errorCode,
    json: errorJson
  };
};
export {
  getSessionFromNextAuth,
  getSessionFromParams,
  parseErrorStringToErrorObject,
  sessionFromSupabaseAuth
};
//# sourceMappingURL=serverUtils.js.map