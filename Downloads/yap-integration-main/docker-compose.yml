version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14
    container_name: yap-postgres
    environment:
      POSTGRES_DB: yapdb
      POSTGRES_USER: yapuser
      POSTGRES_PASSWORD: 1234
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - yap-network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./YAPBackend copy
      dockerfile: Dockerfile
    container_name: yap-backend
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DATABASE_URL=postgresql://yapuser:1234@postgres:5432/yapdb
      - PRIVATE_KEY=${PRIVATE_KEY}
      - TOKEN_ADDRESS=${TOKEN_ADDRESS}
      - FLOWGLAD_SECRET_KEY=${FLOWGLAD_SECRET_KEY}
    ports:
      - "4000:4000"
    depends_on:
      - postgres
    networks:
      - yap-network
    restart: unless-stopped
    volumes:
      - ./YAPBackend copy/uploads:/app/uploads

  # Frontend
  frontend:
    build:
      context: ./yap-frontend-v2 copy
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_PRIVY_APP_ID=${NEXT_PUBLIC_PRIVY_APP_ID}
        - NEXT_PUBLIC_PRIVY_CLIENT_ID=${NEXT_PUBLIC_PRIVY_CLIENT_ID}
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    container_name: yap-frontend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NEXT_PUBLIC_PRIVY_APP_ID=${NEXT_PUBLIC_PRIVY_APP_ID}
      - NEXT_PUBLIC_PRIVY_CLIENT_ID=${NEXT_PUBLIC_PRIVY_CLIENT_ID}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - yap-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: yap-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - frontend
      - backend
    networks:
      - yap-network
    restart: unless-stopped

networks:
  yap-network:
    driver: bridge

volumes:
  postgres_data: 