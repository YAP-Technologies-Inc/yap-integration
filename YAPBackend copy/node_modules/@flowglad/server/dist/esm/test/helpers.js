import {
  __async
} from "../chunk-JPRRZPBL.js";
import { FlowgladServer } from "../FlowgladServer";
import { FlowgladServerAdmin } from "../FlowgladServerAdmin";
const createTestFlowgladServer = () => {
  return new FlowgladServer({
    baseURL: process.env.FLOWGLAD_BASE_URL || "http://localhost:3000",
    getRequestingCustomer: () => __async(void 0, null, function* () {
      return {
        externalId: "test-user-id",
        name: "Test User",
        email: "test@example.com"
      };
    })
  });
};
const wait = (ms) => new Promise((resolve) => setTimeout(resolve, ms));
const retry = (fn, maxRetries = 5, delay = 1e3) => __async(void 0, null, function* () {
  let lastError;
  for (let i = 0; i < maxRetries; i++) {
    try {
      return yield fn();
    } catch (error) {
      lastError = error;
      if (i < maxRetries - 1) {
        yield wait(delay * (i + 1));
      }
    }
  }
  throw lastError;
});
const createTestFlowgladServerAdmin = () => {
  return new FlowgladServerAdmin({
    baseURL: process.env.FLOWGLAD_BASE_URL || "http://localhost:3000"
  });
};
export {
  createTestFlowgladServer,
  createTestFlowgladServerAdmin,
  retry,
  wait
};
//# sourceMappingURL=helpers.js.map