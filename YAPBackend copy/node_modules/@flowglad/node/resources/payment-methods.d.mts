import { APIResource } from "../core/resource.mjs";
import { APIPromise } from "../core/api-promise.mjs";
import { RequestOptions } from "../internal/request-options.mjs";
export declare class PaymentMethods extends APIResource {
    /**
     * Get Payment Method
     */
    retrieve(id: string, options?: RequestOptions): APIPromise<PaymentMethodRetrieveResponse>;
    /**
     * List Payment Methods
     */
    list(query?: PaymentMethodListParams | null | undefined, options?: RequestOptions): APIPromise<PaymentMethodListResponse>;
}
export interface PaymentMethodRetrieveResponse {
    paymentMethod: PaymentMethodRetrieveResponse.PaymentMethod;
}
export declare namespace PaymentMethodRetrieveResponse {
    interface PaymentMethod {
        id: string;
        billingDetails: PaymentMethod.BillingDetails;
        createdAt: string;
        createdByCommit: string | null;
        customerId: string;
        default: boolean;
        livemode: boolean;
        metadata: {
            [key: string]: unknown;
        } | null;
        paymentMethodData: {
            [key: string]: unknown;
        };
        type: 'card' | 'us_bank_account' | 'sepa_debit';
        updatedAt: string | null;
        updatedByCommit: string | null;
    }
    namespace PaymentMethod {
        interface BillingDetails {
            address: BillingDetails.Address;
            email: string | null;
            name: string | null;
        }
        namespace BillingDetails {
            interface Address {
                city: string | null;
                country: string;
                line1: string | null;
                line2: string | null;
                postal_code: string | null;
                state: string | null;
                address?: Address.Address | null;
                name?: string;
            }
            namespace Address {
                interface Address {
                    city: string | null;
                    country: string;
                    line1: string | null;
                    line2: string | null;
                    postal_code: string | null;
                    state: string | null;
                    name?: string;
                }
            }
        }
    }
}
export interface PaymentMethodListResponse {
    data: Array<PaymentMethodListResponse.Data>;
    hasMore: boolean;
    total: number;
    currentCursor?: string;
    nextCursor?: string;
}
export declare namespace PaymentMethodListResponse {
    interface Data {
        id: string;
        billingDetails: Data.BillingDetails;
        createdAt: string;
        createdByCommit: string | null;
        customerId: string;
        default: boolean;
        livemode: boolean;
        metadata: {
            [key: string]: unknown;
        } | null;
        paymentMethodData: {
            [key: string]: unknown;
        };
        type: 'card' | 'us_bank_account' | 'sepa_debit';
        updatedAt: string | null;
        updatedByCommit: string | null;
    }
    namespace Data {
        interface BillingDetails {
            address: BillingDetails.Address;
            email: string | null;
            name: string | null;
        }
        namespace BillingDetails {
            interface Address {
                city: string | null;
                country: string;
                line1: string | null;
                line2: string | null;
                postal_code: string | null;
                state: string | null;
                address?: Address.Address | null;
                name?: string;
            }
            namespace Address {
                interface Address {
                    city: string | null;
                    country: string;
                    line1: string | null;
                    line2: string | null;
                    postal_code: string | null;
                    state: string | null;
                    name?: string;
                }
            }
        }
    }
}
export interface PaymentMethodListParams {
    cursor?: string;
    limit?: number;
}
export declare namespace PaymentMethods {
    export { type PaymentMethodRetrieveResponse as PaymentMethodRetrieveResponse, type PaymentMethodListResponse as PaymentMethodListResponse, type PaymentMethodListParams as PaymentMethodListParams, };
}
//# sourceMappingURL=payment-methods.d.mts.map