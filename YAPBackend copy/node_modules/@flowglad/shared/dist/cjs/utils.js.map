{"version":3,"sources":["../../src/utils.ts"],"sourcesContent":["import type {\n  FeatureItem,\n  SubscriptionExperimentalFields,\n  UsageMeterBalance,\n} from './types'\nimport type { Flowglad as FlowgladNode } from '@flowglad/node'\n\nconst IS_DEV = process.env.NODE_ENV === 'development'\n\nexport const getBaseURL = () => {\n  // allow override in dev\n  if (IS_DEV && process.env.FLOWGLAD_API_URL_OVERRIDE) {\n    return process.env.FLOWGLAD_API_URL_OVERRIDE\n  }\n  return 'https://app.flowglad.com'\n}\n\nexport const constructCheckFeatureAccess = (\n  subscriptions: {\n    id: string\n    experimental?: SubscriptionExperimentalFields\n  }[]\n) => {\n  return (\n    featureSlug: string,\n    refinementParams?: {\n      subscriptionId?: string\n    }\n  ): boolean => {\n    const subscription = refinementParams?.subscriptionId\n      ? subscriptions.find(\n          (s) => s.id === refinementParams.subscriptionId\n        )\n      : subscriptions[0]\n    if (!subscription) {\n      return false\n    }\n    const experimental = subscription.experimental\n    const featureItemsBySlug =\n      experimental?.featureItems.reduce(\n        (acc, featureItem) => {\n          if (featureItem.type === 'toggle') {\n            acc[featureItem.slug] = featureItem\n          }\n          return acc\n        },\n        {} as Record<\n          string,\n          SubscriptionExperimentalFields['featureItems'][number]\n        >\n      ) ?? {}\n    const featureItem = featureItemsBySlug[featureSlug]\n    if (!featureItem) {\n      return false\n    }\n    return featureItem.type === 'toggle'\n  }\n}\n\nexport const constructCheckUsageBalance = (\n  subscriptions: {\n    id: string\n    experimental?: SubscriptionExperimentalFields\n  }[]\n) => {\n  return (\n    usageMeterSlug: string,\n    refinementParams?: {\n      subscriptionId?: string\n    }\n  ): {\n    availableBalance: number\n  } | null => {\n    const subscription = refinementParams?.subscriptionId\n      ? subscriptions.find(\n          (s) => s.id === refinementParams.subscriptionId\n        )\n      : subscriptions[0]\n    if (!subscription) {\n      return null\n    }\n    const experimental = subscription.experimental\n    const usageMeterBalancesBySlug =\n      experimental?.usageMeterBalances.reduce(\n        (acc, usageMeterBalance) => {\n          acc[usageMeterBalance.slug] = usageMeterBalance\n          return acc\n        },\n        {} as Record<string, UsageMeterBalance>\n      ) ?? {}\n    const usageMeterBalance = usageMeterBalancesBySlug[usageMeterSlug]\n    if (!usageMeterBalance) {\n      return null\n    }\n    return usageMeterBalance\n  }\n}\n\nexport const constructGetProduct = (\n  catalog: FlowgladNode.CustomerRetrieveBillingResponse['catalog']\n) => {\n  const productsBySlug = new Map(\n    catalog.products.map((product) => [product.slug, product])\n  )\n  const getProduct = (productSlug: string) => {\n    return productsBySlug.get(productSlug) ?? null\n  }\n  return getProduct\n}\n\nexport const constructGetPrice = (\n  catalog: FlowgladNode.CustomerRetrieveBillingResponse['catalog']\n) => {\n  const pricesBySlug = new Map(\n    catalog.products.flatMap((product) =>\n      product.prices.map((price) => [price.slug, price])\n    )\n  )\n  const getPrice = (priceSlug: string) => {\n    return pricesBySlug.get(priceSlug) ?? null\n  }\n  return getPrice\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,MAAM,SAAS,QAAQ,IAAI,aAAa;AAEjC,MAAM,aAAa,MAAM;AAE9B,MAAI,UAAU,QAAQ,IAAI,2BAA2B;AACnD,WAAO,QAAQ,IAAI;AAAA,EACrB;AACA,SAAO;AACT;AAEO,MAAM,8BAA8B,CACzC,kBAIG;AACH,SAAO,CACL,aACA,qBAGY;AA5BhB;AA6BI,UAAM,gBAAe,qDAAkB,kBACnC,cAAc;AAAA,MACZ,CAAC,MAAM,EAAE,OAAO,iBAAiB;AAAA,IACnC,IACA,cAAc,CAAC;AACnB,QAAI,CAAC,cAAc;AACjB,aAAO;AAAA,IACT;AACA,UAAM,eAAe,aAAa;AAClC,UAAM,sBACJ,kDAAc,aAAa;AAAA,MACzB,CAAC,KAAKA,iBAAgB;AACpB,YAAIA,aAAY,SAAS,UAAU;AACjC,cAAIA,aAAY,IAAI,IAAIA;AAAA,QAC1B;AACA,eAAO;AAAA,MACT;AAAA,MACA,CAAC;AAAA,UAPH,YAWK,CAAC;AACR,UAAM,cAAc,mBAAmB,WAAW;AAClD,QAAI,CAAC,aAAa;AAChB,aAAO;AAAA,IACT;AACA,WAAO,YAAY,SAAS;AAAA,EAC9B;AACF;AAEO,MAAM,6BAA6B,CACxC,kBAIG;AACH,SAAO,CACL,gBACA,qBAKU;AAxEd;AAyEI,UAAM,gBAAe,qDAAkB,kBACnC,cAAc;AAAA,MACZ,CAAC,MAAM,EAAE,OAAO,iBAAiB;AAAA,IACnC,IACA,cAAc,CAAC;AACnB,QAAI,CAAC,cAAc;AACjB,aAAO;AAAA,IACT;AACA,UAAM,eAAe,aAAa;AAClC,UAAM,4BACJ,kDAAc,mBAAmB;AAAA,MAC/B,CAAC,KAAKC,uBAAsB;AAC1B,YAAIA,mBAAkB,IAAI,IAAIA;AAC9B,eAAO;AAAA,MACT;AAAA,MACA,CAAC;AAAA,UALH,YAMK,CAAC;AACR,UAAM,oBAAoB,yBAAyB,cAAc;AACjE,QAAI,CAAC,mBAAmB;AACtB,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AACF;AAEO,MAAM,sBAAsB,CACjC,YACG;AACH,QAAM,iBAAiB,IAAI;AAAA,IACzB,QAAQ,SAAS,IAAI,CAAC,YAAY,CAAC,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC3D;AACA,QAAM,aAAa,CAAC,gBAAwB;AAxG9C;AAyGI,YAAO,oBAAe,IAAI,WAAW,MAA9B,YAAmC;AAAA,EAC5C;AACA,SAAO;AACT;AAEO,MAAM,oBAAoB,CAC/B,YACG;AACH,QAAM,eAAe,IAAI;AAAA,IACvB,QAAQ,SAAS;AAAA,MAAQ,CAAC,YACxB,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,MAAM,KAAK,CAAC;AAAA,IACnD;AAAA,EACF;AACA,QAAM,WAAW,CAAC,cAAsB;AAtH1C;AAuHI,YAAO,kBAAa,IAAI,SAAS,MAA1B,YAA+B;AAAA,EACxC;AACA,SAAO;AACT;","names":["featureItem","usageMeterBalance"]}