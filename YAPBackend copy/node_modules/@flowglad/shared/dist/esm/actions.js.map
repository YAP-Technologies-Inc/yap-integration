{"version":3,"sources":["../../src/actions.ts"],"sourcesContent":["import { z, ZodSchema } from 'zod'\nimport { FlowgladActionKey, HTTPMethod } from './types'\nimport { Flowglad } from '@flowglad/node'\n\nexport type FlowgladActionValidatorMap = Record<\n  FlowgladActionKey,\n  {\n    method: HTTPMethod\n    inputValidator: ZodSchema\n  }\n>\n\nconst createCoreCheckoutSessionSchema = z.object({\n  successUrl: z.string().url(),\n  cancelUrl: z.string().url(),\n  outputMetadata: z.record(z.string(), z.any()).optional(),\n  outputName: z.string().optional(),\n})\n\nexport const createProductCheckoutSessionSchema =\n  createCoreCheckoutSessionSchema.extend({\n    type: z.literal('product'),\n    priceId: z.string(),\n    quantity: z.number().optional().default(1),\n  })\n\nexport const createAddPaymentMethodCheckoutSessionSchema =\n  createCoreCheckoutSessionSchema.extend({\n    type: z.literal('add_payment_method'),\n    targetSubscriptionId: z.string().optional(),\n  })\n\nexport const createActivateSubscriptionCheckoutSessionSchema =\n  createCoreCheckoutSessionSchema.extend({\n    type: z.literal('activate_subscription'),\n    targetSubscriptionId: z.string(),\n    priceId: z.string(),\n  })\n\nexport const createCheckoutSessionSchema = z.discriminatedUnion(\n  'type',\n  [\n    createProductCheckoutSessionSchema,\n    createAddPaymentMethodCheckoutSessionSchema,\n    createActivateSubscriptionCheckoutSessionSchema,\n  ]\n)\n\nexport type CreateProductCheckoutSessionParams = z.infer<\n  typeof createProductCheckoutSessionSchema\n>\nexport type CreateAddPaymentMethodCheckoutSessionParams = z.infer<\n  typeof createAddPaymentMethodCheckoutSessionSchema\n>\nexport type CreateActivateSubscriptionCheckoutSessionParams = z.infer<\n  typeof createActivateSubscriptionCheckoutSessionSchema\n>\nexport type CreateCheckoutSessionParams = z.infer<\n  typeof createCheckoutSessionSchema\n>\n\nexport type SubscriptionCancellationArrangement =\n  Flowglad.Subscriptions.SubscriptionCancelParams['cancellation']['timing']\n\nconst subscriptionCancellationTiming: Record<\n  string,\n  SubscriptionCancellationArrangement\n> = {\n  AtEndOfCurrentBillingPeriod: 'at_end_of_current_billing_period',\n  AtFutureDate: 'at_future_date',\n  Immediately: 'immediately',\n}\n\nconst cancellationParametersSchema = z.discriminatedUnion('timing', [\n  z.object({\n    timing: z.literal(\n      subscriptionCancellationTiming.AtEndOfCurrentBillingPeriod\n    ),\n  }),\n  z.object({\n    timing: z.literal(subscriptionCancellationTiming.AtFutureDate),\n    endDate: z.date(),\n  }),\n  z.object({\n    timing: z.literal(subscriptionCancellationTiming.Immediately),\n  }),\n])\n\nexport const cancelSubscriptionSchema = z.object({\n  id: z.string(),\n  cancellation: cancellationParametersSchema,\n})\n\nexport const createUsageEventSchema = z.object({\n  amount: z.number(),\n  priceId: z.string(),\n  subscriptionId: z.string(),\n  usageMeterId: z.string(),\n  properties: z.record(z.string(), z.unknown()).nullish(),\n  transactionId: z.string(),\n  usageDate: z.number().optional(),\n})\n\nexport type CreateUsageEventParams = z.infer<\n  typeof createUsageEventSchema\n>\n\nexport type CancelSubscriptionParams = z.infer<\n  typeof cancelSubscriptionSchema\n>\n\nexport const createSubscriptionSchema = z.object({\n  customerId: z.string(),\n  priceId: z.string(),\n  quantity: z.number().optional(),\n  startDate: z.string().datetime().optional(),\n  trialEnd: z\n    .number()\n    .optional()\n    .describe(\n      `Epoch time in milliseconds of when the trial ends. If not provided, defaults to startDate + the associated price's trialPeriodDays`\n    ),\n  metadata: z.record(z.string(), z.unknown()).optional(),\n  name: z.string().optional(),\n  backupPaymentMethodId: z.string().optional(),\n  defaultPaymentMethodId: z.string().optional(),\n  interval: z.enum(['day', 'week', 'month', 'year']).optional(),\n  intervalCount: z.number().optional(),\n})\n\nexport type CreateSubscriptionParams = z.infer<\n  typeof createSubscriptionSchema\n>\n\nexport const billingAddressSchema = z.object({\n  name: z.string().optional(),\n  firstName: z.string().optional(),\n  lastName: z.string().optional(),\n  email: z.string().email().optional(),\n  address: z.object({\n    name: z.string().optional(),\n    line1: z.string().nullable(),\n    line2: z.string().nullable(),\n    city: z.string().nullable(),\n    state: z.string().nullable(),\n    postal_code: z.string().nullable(),\n    country: z.string(),\n  }),\n  phone: z.string().optional(),\n})\n\nexport const updateCustomerInputSchema = z.object({\n  id: z.string(),\n  name: z.string().optional(),\n  email: z.string().email().optional(),\n  phone: z.string().optional(),\n  billingAddress: billingAddressSchema.optional(),\n})\n\nexport const updateCustomerSchema = z.object({\n  customer: updateCustomerInputSchema,\n  externalId: z.string(),\n})\n\nexport const flowgladActionValidators: FlowgladActionValidatorMap = {\n  [FlowgladActionKey.GetCustomerBilling]: {\n    method: HTTPMethod.POST,\n    inputValidator: z.object({\n      externalId: z.string(),\n    }),\n  },\n  [FlowgladActionKey.FindOrCreateCustomer]: {\n    method: HTTPMethod.POST,\n    inputValidator: z.object({\n      externalId: z.string(),\n    }),\n  },\n  [FlowgladActionKey.CreateCheckoutSession]: {\n    method: HTTPMethod.POST,\n    inputValidator: createCheckoutSessionSchema,\n  },\n  [FlowgladActionKey.CancelSubscription]: {\n    method: HTTPMethod.POST,\n    inputValidator: cancelSubscriptionSchema,\n  },\n  [FlowgladActionKey.CreateSubscription]: {\n    method: HTTPMethod.POST,\n    inputValidator: createSubscriptionSchema,\n  },\n  [FlowgladActionKey.UpdateCustomer]: {\n    method: HTTPMethod.POST,\n    inputValidator: updateCustomerSchema,\n  },\n}\n"],"mappings":"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","names":[]}