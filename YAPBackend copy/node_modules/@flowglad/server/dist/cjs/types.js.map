{"version":3,"sources":["../../src/types.ts"],"sourcesContent":["export interface CoreCustomerUser {\n  externalId: string\n  name: string\n  email: string\n}\n\nexport type GetRequestingCustomer = () => Promise<CoreCustomerUser>\n\nexport interface FlowgladServerSessionParamsCore {\n  getRequestingCustomer?: GetRequestingCustomer\n  baseURL?: string\n  apiKey?: string\n}\n\ninterface SupabaseClient {\n  auth: {\n    getUser: () => Promise<\n      | {\n          data: {\n            user: {\n              id: string\n              email?: string\n              phone?: string\n              user_metadata: {\n                [key: string]: any\n              }\n            }\n          }\n        }\n      | {\n          data: {\n            user: null\n          }\n          error: any\n        }\n    >\n  }\n}\n\nexport interface SupabaseFlowgladServerSessionParams\n  extends FlowgladServerSessionParamsCore {\n  supabaseAuth: {\n    client: () => Promise<SupabaseClient> | SupabaseClient\n  }\n}\n\ninterface NextAuthSession {\n  user: {\n    name?: string | null\n    email?: string | null\n    image?: string | null\n  }\n}\n\nexport interface NextjsAuthFlowgladServerSessionParams\n  extends FlowgladServerSessionParamsCore {\n  nextAuth: {\n    auth: () => Promise<NextAuthSession | null>\n    customerFromAuth?: (\n      session: NextAuthSession\n    ) => Promise<CoreCustomerUser | null>\n  }\n}\n\ninterface BetterAuthSession {\n  user: {\n    name?: string | null\n    email?: string | null\n    image?: string | null\n  }\n}\n\nexport interface BetterAuthFlowgladServerSessionParams\n  extends FlowgladServerSessionParamsCore {\n  betterAuth: {\n    /**\n     * the getSession function from the BetterAuth client.\n     */\n    getSession: () => Promise<BetterAuthSession | null>\n    /**\n     * Extracts the customer parameters from the session object.\n     */\n    customerFromSession?: (\n      session: BetterAuthSession\n    ) => Promise<CoreCustomerUser | null>\n  }\n}\n\nexport interface BaseFlowgladServerSessionParams\n  extends FlowgladServerSessionParamsCore {\n  getRequestingCustomer: GetRequestingCustomer\n}\n\ninterface ClerkEmailAddress {\n  emailAddress: string\n}\n\ninterface ClerkUser {\n  id: string\n  firstName: string | null\n  lastName: string | null\n  username: string | null\n  emailAddresses: ClerkEmailAddress[]\n}\n\nexport interface ClerkFlowgladServerSessionParams\n  extends FlowgladServerSessionParamsCore {\n  clerk: {\n    currentUser: () => Promise<ClerkUser | null>\n    customerFromCurrentUser?: (\n      currentUser: ClerkUser\n    ) => Promise<CoreCustomerUser | null>\n  }\n}\n\nexport type FlowgladServerSessionParams =\n  | SupabaseFlowgladServerSessionParams\n  | NextjsAuthFlowgladServerSessionParams\n  | ClerkFlowgladServerSessionParams\n  | BetterAuthFlowgladServerSessionParams\n  | BaseFlowgladServerSessionParams\n"],"mappings":";;;;;;;;;;;;;;AAAA;AAAA;","names":[]}