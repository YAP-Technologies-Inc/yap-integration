"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};
var FlowgladServerAdmin_exports = {};
__export(FlowgladServerAdmin_exports, {
  FlowgladServerAdmin: () => FlowgladServerAdmin
});
module.exports = __toCommonJS(FlowgladServerAdmin_exports);
var import_node = require("@flowglad/node");
class FlowgladServerAdmin {
  constructor(options) {
    this.flowgladNode = new import_node.Flowglad(options);
  }
  createCustomer(input) {
    return __async(this, null, function* () {
      return this.flowgladNode.customers.create(input);
    });
  }
  getCustomer(externalId) {
    return __async(this, null, function* () {
      return this.flowgladNode.customers.retrieve(externalId);
    });
  }
  getCustomerBilling(externalId) {
    return __async(this, null, function* () {
      return this.flowgladNode.customers.retrieveBilling(externalId);
    });
  }
  updateCustomer(id, input) {
    return __async(this, null, function* () {
      return this.flowgladNode.customers.update(id, input);
    });
  }
  getCatalog(id) {
    return __async(this, null, function* () {
      return this.flowgladNode.catalogs.retrieve(id);
    });
  }
  getDefaultCatalog() {
    return __async(this, null, function* () {
      return this.flowgladNode.catalogs.retrieveDefault();
    });
  }
  createCatalog(input) {
    return __async(this, null, function* () {
      return this.flowgladNode.catalogs.create(input);
    });
  }
  updateCatalog(id, input) {
    return __async(this, null, function* () {
      return this.flowgladNode.catalogs.update(id, input);
    });
  }
  createProduct(input) {
    return __async(this, null, function* () {
      return this.flowgladNode.products.create(input);
    });
  }
  updateProduct(id, input) {
    return __async(this, null, function* () {
      return this.flowgladNode.products.update(id, input);
    });
  }
  cloneCatalog(id, params) {
    return __async(this, null, function* () {
      return this.flowgladNode.catalogs.clone(id, params);
    });
  }
  getCatalogWithProductsAndUsageMeters(id) {
    return __async(this, null, function* () {
      return this.flowgladNode.catalogs.retrieve(id);
    });
  }
  getUsageMeters(params) {
    return __async(this, null, function* () {
      return this.flowgladNode.usageMeters.list(params);
    });
  }
  getUsageMeter(id) {
    return __async(this, null, function* () {
      return this.flowgladNode.usageMeters.retrieve(id);
    });
  }
  updateUsageMeter(id, params) {
    return __async(this, null, function* () {
      return this.flowgladNode.usageMeters.update(id, params);
    });
  }
  createUsageMeter(params) {
    return __async(this, null, function* () {
      return this.flowgladNode.usageMeters.create(params);
    });
  }
  createUsageEvent(params) {
    return __async(this, null, function* () {
      return this.flowgladNode.usageEvents.create(params);
    });
  }
  getUsageEvent(id) {
    return __async(this, null, function* () {
      return this.flowgladNode.usageEvents.retrieve(id);
    });
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  FlowgladServerAdmin
});
//# sourceMappingURL=FlowgladServerAdmin.js.map