import { z, ZodSchema } from 'zod';
import { FlowgladActionKey, HTTPMethod } from './types';
import { Flowglad } from '@flowglad/node';
export type FlowgladActionValidatorMap = Record<FlowgladActionKey, {
    method: HTTPMethod;
    inputValidator: ZodSchema;
}>;
export declare const createProductCheckoutSessionSchema: z.ZodObject<{
    successUrl: z.ZodString;
    cancelUrl: z.ZodString;
    outputMetadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    outputName: z.ZodOptional<z.ZodString>;
} & {
    type: z.ZodLiteral<"product">;
    priceId: z.ZodString;
    quantity: z.ZodDefault<z.ZodOptional<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    successUrl: string;
    cancelUrl: string;
    type: "product";
    priceId: string;
    quantity: number;
    outputMetadata?: Record<string, any> | undefined;
    outputName?: string | undefined;
}, {
    successUrl: string;
    cancelUrl: string;
    type: "product";
    priceId: string;
    outputMetadata?: Record<string, any> | undefined;
    outputName?: string | undefined;
    quantity?: number | undefined;
}>;
export declare const createAddPaymentMethodCheckoutSessionSchema: z.ZodObject<{
    successUrl: z.ZodString;
    cancelUrl: z.ZodString;
    outputMetadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    outputName: z.ZodOptional<z.ZodString>;
} & {
    type: z.ZodLiteral<"add_payment_method">;
    targetSubscriptionId: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    successUrl: string;
    cancelUrl: string;
    type: "add_payment_method";
    outputMetadata?: Record<string, any> | undefined;
    outputName?: string | undefined;
    targetSubscriptionId?: string | undefined;
}, {
    successUrl: string;
    cancelUrl: string;
    type: "add_payment_method";
    outputMetadata?: Record<string, any> | undefined;
    outputName?: string | undefined;
    targetSubscriptionId?: string | undefined;
}>;
export declare const createActivateSubscriptionCheckoutSessionSchema: z.ZodObject<{
    successUrl: z.ZodString;
    cancelUrl: z.ZodString;
    outputMetadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    outputName: z.ZodOptional<z.ZodString>;
} & {
    type: z.ZodLiteral<"activate_subscription">;
    targetSubscriptionId: z.ZodString;
    priceId: z.ZodString;
}, "strip", z.ZodTypeAny, {
    successUrl: string;
    cancelUrl: string;
    type: "activate_subscription";
    priceId: string;
    targetSubscriptionId: string;
    outputMetadata?: Record<string, any> | undefined;
    outputName?: string | undefined;
}, {
    successUrl: string;
    cancelUrl: string;
    type: "activate_subscription";
    priceId: string;
    targetSubscriptionId: string;
    outputMetadata?: Record<string, any> | undefined;
    outputName?: string | undefined;
}>;
export declare const createCheckoutSessionSchema: z.ZodDiscriminatedUnion<"type", [z.ZodObject<{
    successUrl: z.ZodString;
    cancelUrl: z.ZodString;
    outputMetadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    outputName: z.ZodOptional<z.ZodString>;
} & {
    type: z.ZodLiteral<"product">;
    priceId: z.ZodString;
    quantity: z.ZodDefault<z.ZodOptional<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    successUrl: string;
    cancelUrl: string;
    type: "product";
    priceId: string;
    quantity: number;
    outputMetadata?: Record<string, any> | undefined;
    outputName?: string | undefined;
}, {
    successUrl: string;
    cancelUrl: string;
    type: "product";
    priceId: string;
    outputMetadata?: Record<string, any> | undefined;
    outputName?: string | undefined;
    quantity?: number | undefined;
}>, z.ZodObject<{
    successUrl: z.ZodString;
    cancelUrl: z.ZodString;
    outputMetadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    outputName: z.ZodOptional<z.ZodString>;
} & {
    type: z.ZodLiteral<"add_payment_method">;
    targetSubscriptionId: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    successUrl: string;
    cancelUrl: string;
    type: "add_payment_method";
    outputMetadata?: Record<string, any> | undefined;
    outputName?: string | undefined;
    targetSubscriptionId?: string | undefined;
}, {
    successUrl: string;
    cancelUrl: string;
    type: "add_payment_method";
    outputMetadata?: Record<string, any> | undefined;
    outputName?: string | undefined;
    targetSubscriptionId?: string | undefined;
}>, z.ZodObject<{
    successUrl: z.ZodString;
    cancelUrl: z.ZodString;
    outputMetadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    outputName: z.ZodOptional<z.ZodString>;
} & {
    type: z.ZodLiteral<"activate_subscription">;
    targetSubscriptionId: z.ZodString;
    priceId: z.ZodString;
}, "strip", z.ZodTypeAny, {
    successUrl: string;
    cancelUrl: string;
    type: "activate_subscription";
    priceId: string;
    targetSubscriptionId: string;
    outputMetadata?: Record<string, any> | undefined;
    outputName?: string | undefined;
}, {
    successUrl: string;
    cancelUrl: string;
    type: "activate_subscription";
    priceId: string;
    targetSubscriptionId: string;
    outputMetadata?: Record<string, any> | undefined;
    outputName?: string | undefined;
}>]>;
export type CreateProductCheckoutSessionParams = z.infer<typeof createProductCheckoutSessionSchema>;
export type CreateAddPaymentMethodCheckoutSessionParams = z.infer<typeof createAddPaymentMethodCheckoutSessionSchema>;
export type CreateActivateSubscriptionCheckoutSessionParams = z.infer<typeof createActivateSubscriptionCheckoutSessionSchema>;
export type CreateCheckoutSessionParams = z.infer<typeof createCheckoutSessionSchema>;
export type SubscriptionCancellationArrangement = Flowglad.Subscriptions.SubscriptionCancelParams['cancellation']['timing'];
export declare const cancelSubscriptionSchema: z.ZodObject<{
    id: z.ZodString;
    cancellation: z.ZodDiscriminatedUnion<"timing", [z.ZodObject<{
        timing: z.ZodLiteral<"at_end_of_current_billing_period" | "at_future_date" | "immediately">;
    }, "strip", z.ZodTypeAny, {
        timing: "at_end_of_current_billing_period" | "at_future_date" | "immediately";
    }, {
        timing: "at_end_of_current_billing_period" | "at_future_date" | "immediately";
    }>, z.ZodObject<{
        timing: z.ZodLiteral<"at_end_of_current_billing_period" | "at_future_date" | "immediately">;
        endDate: z.ZodDate;
    }, "strip", z.ZodTypeAny, {
        timing: "at_end_of_current_billing_period" | "at_future_date" | "immediately";
        endDate: Date;
    }, {
        timing: "at_end_of_current_billing_period" | "at_future_date" | "immediately";
        endDate: Date;
    }>, z.ZodObject<{
        timing: z.ZodLiteral<"at_end_of_current_billing_period" | "at_future_date" | "immediately">;
    }, "strip", z.ZodTypeAny, {
        timing: "at_end_of_current_billing_period" | "at_future_date" | "immediately";
    }, {
        timing: "at_end_of_current_billing_period" | "at_future_date" | "immediately";
    }>]>;
}, "strip", z.ZodTypeAny, {
    cancellation: {
        timing: "at_end_of_current_billing_period" | "at_future_date" | "immediately";
    } | {
        timing: "at_end_of_current_billing_period" | "at_future_date" | "immediately";
        endDate: Date;
    } | {
        timing: "at_end_of_current_billing_period" | "at_future_date" | "immediately";
    };
    id: string;
}, {
    cancellation: {
        timing: "at_end_of_current_billing_period" | "at_future_date" | "immediately";
    } | {
        timing: "at_end_of_current_billing_period" | "at_future_date" | "immediately";
        endDate: Date;
    } | {
        timing: "at_end_of_current_billing_period" | "at_future_date" | "immediately";
    };
    id: string;
}>;
export declare const createUsageEventSchema: z.ZodObject<{
    amount: z.ZodNumber;
    priceId: z.ZodString;
    subscriptionId: z.ZodString;
    usageMeterId: z.ZodString;
    properties: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
    transactionId: z.ZodString;
    usageDate: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    priceId: string;
    amount: number;
    subscriptionId: string;
    usageMeterId: string;
    transactionId: string;
    properties?: Record<string, unknown> | null | undefined;
    usageDate?: number | undefined;
}, {
    priceId: string;
    amount: number;
    subscriptionId: string;
    usageMeterId: string;
    transactionId: string;
    properties?: Record<string, unknown> | null | undefined;
    usageDate?: number | undefined;
}>;
export type CreateUsageEventParams = z.infer<typeof createUsageEventSchema>;
export type CancelSubscriptionParams = z.infer<typeof cancelSubscriptionSchema>;
export declare const createSubscriptionSchema: z.ZodObject<{
    customerId: z.ZodString;
    priceId: z.ZodString;
    quantity: z.ZodOptional<z.ZodNumber>;
    startDate: z.ZodOptional<z.ZodString>;
    trialEnd: z.ZodOptional<z.ZodNumber>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    name: z.ZodOptional<z.ZodString>;
    backupPaymentMethodId: z.ZodOptional<z.ZodString>;
    defaultPaymentMethodId: z.ZodOptional<z.ZodString>;
    interval: z.ZodOptional<z.ZodEnum<["day", "week", "month", "year"]>>;
    intervalCount: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    priceId: string;
    customerId: string;
    quantity?: number | undefined;
    startDate?: string | undefined;
    trialEnd?: number | undefined;
    metadata?: Record<string, unknown> | undefined;
    name?: string | undefined;
    backupPaymentMethodId?: string | undefined;
    defaultPaymentMethodId?: string | undefined;
    interval?: "day" | "week" | "month" | "year" | undefined;
    intervalCount?: number | undefined;
}, {
    priceId: string;
    customerId: string;
    quantity?: number | undefined;
    startDate?: string | undefined;
    trialEnd?: number | undefined;
    metadata?: Record<string, unknown> | undefined;
    name?: string | undefined;
    backupPaymentMethodId?: string | undefined;
    defaultPaymentMethodId?: string | undefined;
    interval?: "day" | "week" | "month" | "year" | undefined;
    intervalCount?: number | undefined;
}>;
export type CreateSubscriptionParams = z.infer<typeof createSubscriptionSchema>;
export declare const billingAddressSchema: z.ZodObject<{
    name: z.ZodOptional<z.ZodString>;
    firstName: z.ZodOptional<z.ZodString>;
    lastName: z.ZodOptional<z.ZodString>;
    email: z.ZodOptional<z.ZodString>;
    address: z.ZodObject<{
        name: z.ZodOptional<z.ZodString>;
        line1: z.ZodNullable<z.ZodString>;
        line2: z.ZodNullable<z.ZodString>;
        city: z.ZodNullable<z.ZodString>;
        state: z.ZodNullable<z.ZodString>;
        postal_code: z.ZodNullable<z.ZodString>;
        country: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        line1: string | null;
        line2: string | null;
        city: string | null;
        state: string | null;
        postal_code: string | null;
        country: string;
        name?: string | undefined;
    }, {
        line1: string | null;
        line2: string | null;
        city: string | null;
        state: string | null;
        postal_code: string | null;
        country: string;
        name?: string | undefined;
    }>;
    phone: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    address: {
        line1: string | null;
        line2: string | null;
        city: string | null;
        state: string | null;
        postal_code: string | null;
        country: string;
        name?: string | undefined;
    };
    name?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    email?: string | undefined;
    phone?: string | undefined;
}, {
    address: {
        line1: string | null;
        line2: string | null;
        city: string | null;
        state: string | null;
        postal_code: string | null;
        country: string;
        name?: string | undefined;
    };
    name?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    email?: string | undefined;
    phone?: string | undefined;
}>;
export declare const updateCustomerInputSchema: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodOptional<z.ZodString>;
    email: z.ZodOptional<z.ZodString>;
    phone: z.ZodOptional<z.ZodString>;
    billingAddress: z.ZodOptional<z.ZodObject<{
        name: z.ZodOptional<z.ZodString>;
        firstName: z.ZodOptional<z.ZodString>;
        lastName: z.ZodOptional<z.ZodString>;
        email: z.ZodOptional<z.ZodString>;
        address: z.ZodObject<{
            name: z.ZodOptional<z.ZodString>;
            line1: z.ZodNullable<z.ZodString>;
            line2: z.ZodNullable<z.ZodString>;
            city: z.ZodNullable<z.ZodString>;
            state: z.ZodNullable<z.ZodString>;
            postal_code: z.ZodNullable<z.ZodString>;
            country: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            line1: string | null;
            line2: string | null;
            city: string | null;
            state: string | null;
            postal_code: string | null;
            country: string;
            name?: string | undefined;
        }, {
            line1: string | null;
            line2: string | null;
            city: string | null;
            state: string | null;
            postal_code: string | null;
            country: string;
            name?: string | undefined;
        }>;
        phone: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        address: {
            line1: string | null;
            line2: string | null;
            city: string | null;
            state: string | null;
            postal_code: string | null;
            country: string;
            name?: string | undefined;
        };
        name?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
    }, {
        address: {
            line1: string | null;
            line2: string | null;
            city: string | null;
            state: string | null;
            postal_code: string | null;
            country: string;
            name?: string | undefined;
        };
        name?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
    }>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    name?: string | undefined;
    email?: string | undefined;
    phone?: string | undefined;
    billingAddress?: {
        address: {
            line1: string | null;
            line2: string | null;
            city: string | null;
            state: string | null;
            postal_code: string | null;
            country: string;
            name?: string | undefined;
        };
        name?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
    } | undefined;
}, {
    id: string;
    name?: string | undefined;
    email?: string | undefined;
    phone?: string | undefined;
    billingAddress?: {
        address: {
            line1: string | null;
            line2: string | null;
            city: string | null;
            state: string | null;
            postal_code: string | null;
            country: string;
            name?: string | undefined;
        };
        name?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
    } | undefined;
}>;
export declare const updateCustomerSchema: z.ZodObject<{
    customer: z.ZodObject<{
        id: z.ZodString;
        name: z.ZodOptional<z.ZodString>;
        email: z.ZodOptional<z.ZodString>;
        phone: z.ZodOptional<z.ZodString>;
        billingAddress: z.ZodOptional<z.ZodObject<{
            name: z.ZodOptional<z.ZodString>;
            firstName: z.ZodOptional<z.ZodString>;
            lastName: z.ZodOptional<z.ZodString>;
            email: z.ZodOptional<z.ZodString>;
            address: z.ZodObject<{
                name: z.ZodOptional<z.ZodString>;
                line1: z.ZodNullable<z.ZodString>;
                line2: z.ZodNullable<z.ZodString>;
                city: z.ZodNullable<z.ZodString>;
                state: z.ZodNullable<z.ZodString>;
                postal_code: z.ZodNullable<z.ZodString>;
                country: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                line1: string | null;
                line2: string | null;
                city: string | null;
                state: string | null;
                postal_code: string | null;
                country: string;
                name?: string | undefined;
            }, {
                line1: string | null;
                line2: string | null;
                city: string | null;
                state: string | null;
                postal_code: string | null;
                country: string;
                name?: string | undefined;
            }>;
            phone: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            address: {
                line1: string | null;
                line2: string | null;
                city: string | null;
                state: string | null;
                postal_code: string | null;
                country: string;
                name?: string | undefined;
            };
            name?: string | undefined;
            firstName?: string | undefined;
            lastName?: string | undefined;
            email?: string | undefined;
            phone?: string | undefined;
        }, {
            address: {
                line1: string | null;
                line2: string | null;
                city: string | null;
                state: string | null;
                postal_code: string | null;
                country: string;
                name?: string | undefined;
            };
            name?: string | undefined;
            firstName?: string | undefined;
            lastName?: string | undefined;
            email?: string | undefined;
            phone?: string | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        name?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        billingAddress?: {
            address: {
                line1: string | null;
                line2: string | null;
                city: string | null;
                state: string | null;
                postal_code: string | null;
                country: string;
                name?: string | undefined;
            };
            name?: string | undefined;
            firstName?: string | undefined;
            lastName?: string | undefined;
            email?: string | undefined;
            phone?: string | undefined;
        } | undefined;
    }, {
        id: string;
        name?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        billingAddress?: {
            address: {
                line1: string | null;
                line2: string | null;
                city: string | null;
                state: string | null;
                postal_code: string | null;
                country: string;
                name?: string | undefined;
            };
            name?: string | undefined;
            firstName?: string | undefined;
            lastName?: string | undefined;
            email?: string | undefined;
            phone?: string | undefined;
        } | undefined;
    }>;
    externalId: z.ZodString;
}, "strip", z.ZodTypeAny, {
    customer: {
        id: string;
        name?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        billingAddress?: {
            address: {
                line1: string | null;
                line2: string | null;
                city: string | null;
                state: string | null;
                postal_code: string | null;
                country: string;
                name?: string | undefined;
            };
            name?: string | undefined;
            firstName?: string | undefined;
            lastName?: string | undefined;
            email?: string | undefined;
            phone?: string | undefined;
        } | undefined;
    };
    externalId: string;
}, {
    customer: {
        id: string;
        name?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        billingAddress?: {
            address: {
                line1: string | null;
                line2: string | null;
                city: string | null;
                state: string | null;
                postal_code: string | null;
                country: string;
                name?: string | undefined;
            };
            name?: string | undefined;
            firstName?: string | undefined;
            lastName?: string | undefined;
            email?: string | undefined;
            phone?: string | undefined;
        } | undefined;
    };
    externalId: string;
}>;
export declare const flowgladActionValidators: FlowgladActionValidatorMap;
