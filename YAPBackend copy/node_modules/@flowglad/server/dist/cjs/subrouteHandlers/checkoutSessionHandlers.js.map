{"version":3,"sources":["../../../src/subrouteHandlers/checkoutSessionHandlers.ts"],"sourcesContent":["import { FlowgladActionKey, HTTPMethod } from '@flowglad/shared'\nimport { SubRouteHandler, SubRouteHandlerResultData } from './types'\nimport { FlowgladServer } from '../FlowgladServer'\nimport { parseErrorStringToErrorObject } from '../serverUtils'\n\nconst createCheckoutSession: SubRouteHandler<\n  FlowgladActionKey.CreateCheckoutSession\n> = async (params, flowgladServer: FlowgladServer) => {\n  let error:\n    | { code: string; json: Record<string, unknown> }\n    | undefined\n  let status: number\n  let data: SubRouteHandlerResultData<FlowgladActionKey.CreateCheckoutSession> =\n    {}\n  if (params.method !== HTTPMethod.POST) {\n    error = {\n      code: 'Method not allowed',\n      json: {},\n    }\n    status = 405\n    return {\n      data,\n      status,\n      error,\n    }\n  }\n  try {\n    const checkoutSession =\n      await flowgladServer.createCheckoutSession(params.data)\n    data = checkoutSession\n    status = 200\n  } catch (e) {\n    if (e instanceof Error) {\n      error = parseErrorStringToErrorObject(e.message)\n    } else {\n      error = {\n        code: 'Unknown error',\n        json: {},\n      }\n    }\n    status = 500\n  }\n  return {\n    data,\n    status,\n    error,\n  }\n}\n\nexport { createCheckoutSession }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA8C;AAG9C,yBAA8C;AAE9C,MAAM,wBAEF,CAAO,QAAQ,mBAAmC;AACpD,MAAI;AAGJ,MAAI;AACJ,MAAI,OACF,CAAC;AACH,MAAI,OAAO,WAAW,yBAAW,MAAM;AACrC,YAAQ;AAAA,MACN,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,IACT;AACA,aAAS;AACT,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACA,MAAI;AACF,UAAM,kBACJ,MAAM,eAAe,sBAAsB,OAAO,IAAI;AACxD,WAAO;AACP,aAAS;AAAA,EACX,SAAS,GAAG;AACV,QAAI,aAAa,OAAO;AACtB,kBAAQ,kDAA8B,EAAE,OAAO;AAAA,IACjD,OAAO;AACL,cAAQ;AAAA,QACN,MAAM;AAAA,QACN,MAAM,CAAC;AAAA,MACT;AAAA,IACF;AACA,aAAS;AAAA,EACX;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;","names":[]}