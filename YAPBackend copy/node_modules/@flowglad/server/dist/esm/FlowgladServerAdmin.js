import {
  __async
} from "./chunk-JPRRZPBL.js";
import {
  Flowglad as FlowgladNode
} from "@flowglad/node";
class FlowgladServerAdmin {
  constructor(options) {
    this.flowgladNode = new FlowgladNode(options);
  }
  createCustomer(input) {
    return __async(this, null, function* () {
      return this.flowgladNode.customers.create(input);
    });
  }
  getCustomer(externalId) {
    return __async(this, null, function* () {
      return this.flowgladNode.customers.retrieve(externalId);
    });
  }
  getCustomerBilling(externalId) {
    return __async(this, null, function* () {
      return this.flowgladNode.customers.retrieveBilling(externalId);
    });
  }
  updateCustomer(id, input) {
    return __async(this, null, function* () {
      return this.flowgladNode.customers.update(id, input);
    });
  }
  getCatalog(id) {
    return __async(this, null, function* () {
      return this.flowgladNode.catalogs.retrieve(id);
    });
  }
  getDefaultCatalog() {
    return __async(this, null, function* () {
      return this.flowgladNode.catalogs.retrieveDefault();
    });
  }
  createCatalog(input) {
    return __async(this, null, function* () {
      return this.flowgladNode.catalogs.create(input);
    });
  }
  updateCatalog(id, input) {
    return __async(this, null, function* () {
      return this.flowgladNode.catalogs.update(id, input);
    });
  }
  createProduct(input) {
    return __async(this, null, function* () {
      return this.flowgladNode.products.create(input);
    });
  }
  updateProduct(id, input) {
    return __async(this, null, function* () {
      return this.flowgladNode.products.update(id, input);
    });
  }
  cloneCatalog(id, params) {
    return __async(this, null, function* () {
      return this.flowgladNode.catalogs.clone(id, params);
    });
  }
  getCatalogWithProductsAndUsageMeters(id) {
    return __async(this, null, function* () {
      return this.flowgladNode.catalogs.retrieve(id);
    });
  }
  getUsageMeters(params) {
    return __async(this, null, function* () {
      return this.flowgladNode.usageMeters.list(params);
    });
  }
  getUsageMeter(id) {
    return __async(this, null, function* () {
      return this.flowgladNode.usageMeters.retrieve(id);
    });
  }
  updateUsageMeter(id, params) {
    return __async(this, null, function* () {
      return this.flowgladNode.usageMeters.update(id, params);
    });
  }
  createUsageMeter(params) {
    return __async(this, null, function* () {
      return this.flowgladNode.usageMeters.create(params);
    });
  }
  createUsageEvent(params) {
    return __async(this, null, function* () {
      return this.flowgladNode.usageEvents.create(params);
    });
  }
  getUsageEvent(id) {
    return __async(this, null, function* () {
      return this.flowgladNode.usageEvents.retrieve(id);
    });
  }
}
export {
  FlowgladServerAdmin
};
//# sourceMappingURL=FlowgladServerAdmin.js.map