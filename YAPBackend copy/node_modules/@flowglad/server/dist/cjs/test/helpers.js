"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};
var helpers_exports = {};
__export(helpers_exports, {
  createTestFlowgladServer: () => createTestFlowgladServer,
  createTestFlowgladServerAdmin: () => createTestFlowgladServerAdmin,
  retry: () => retry,
  wait: () => wait
});
module.exports = __toCommonJS(helpers_exports);
var import_FlowgladServer = require("../FlowgladServer");
var import_FlowgladServerAdmin = require("../FlowgladServerAdmin");
const createTestFlowgladServer = () => {
  return new import_FlowgladServer.FlowgladServer({
    baseURL: process.env.FLOWGLAD_BASE_URL || "http://localhost:3000",
    getRequestingCustomer: () => __async(void 0, null, function* () {
      return {
        externalId: "test-user-id",
        name: "Test User",
        email: "test@example.com"
      };
    })
  });
};
const wait = (ms) => new Promise((resolve) => setTimeout(resolve, ms));
const retry = (fn, maxRetries = 5, delay = 1e3) => __async(void 0, null, function* () {
  let lastError;
  for (let i = 0; i < maxRetries; i++) {
    try {
      return yield fn();
    } catch (error) {
      lastError = error;
      if (i < maxRetries - 1) {
        yield wait(delay * (i + 1));
      }
    }
  }
  throw lastError;
});
const createTestFlowgladServerAdmin = () => {
  return new import_FlowgladServerAdmin.FlowgladServerAdmin({
    baseURL: process.env.FLOWGLAD_BASE_URL || "http://localhost:3000"
  });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  createTestFlowgladServer,
  createTestFlowgladServerAdmin,
  retry,
  wait
});
//# sourceMappingURL=helpers.js.map