"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};
var seedServer_exports = {};
__export(seedServer_exports, {
  setupProduct: () => setupProduct
});
module.exports = __toCommonJS(seedServer_exports);
var import_helpers = require("./helpers");
const setupProduct = (params) => __async(void 0, null, function* () {
  const admin = (0, import_helpers.createTestFlowgladServerAdmin)();
  const product = yield admin.createProduct({
    product: {
      name: params.name,
      description: params.description,
      active: typeof params.active === "boolean" ? params.active : false,
      catalogId: params.catalogId,
      displayFeatures: [],
      imageURL: null,
      pluralQuantityLabel: "items",
      singularQuantityLabel: "item",
      slug: "test-product",
      default: false
    },
    price: {
      unitPrice: 1e3,
      intervalUnit: "month",
      intervalCount: 1,
      active: true,
      isDefault: false,
      name: "Test Product",
      setupFeeAmount: 0,
      type: "subscription",
      usageMeterId: null,
      trialPeriodDays: null,
      slug: "test-product"
    }
  });
  return product;
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  setupProduct
});
//# sourceMappingURL=seedServer.js.map