import type { SubscriptionExperimentalFields } from './types';
import type { Flowglad as FlowgladNode } from '@flowglad/node';
export declare const getBaseURL: () => string;
export declare const constructCheckFeatureAccess: (subscriptions: {
    id: string;
    experimental?: SubscriptionExperimentalFields;
}[]) => (featureSlug: string, refinementParams?: {
    subscriptionId?: string;
}) => boolean;
export declare const constructCheckUsageBalance: (subscriptions: {
    id: string;
    experimental?: SubscriptionExperimentalFields;
}[]) => (usageMeterSlug: string, refinementParams?: {
    subscriptionId?: string;
}) => {
    availableBalance: number;
} | null;
export declare const constructGetProduct: (catalog: FlowgladNode.CustomerRetrieveBillingResponse["catalog"]) => (productSlug: string) => FlowgladNode.Customers.CustomerRetrieveBillingResponse.Catalog.Product | null;
export declare const constructGetPrice: (catalog: FlowgladNode.CustomerRetrieveBillingResponse["catalog"]) => (priceSlug: string) => FlowgladNode.Customers.CustomerRetrieveBillingResponse.Catalog.Product.SubscriptionPrice | FlowgladNode.Customers.CustomerRetrieveBillingResponse.Catalog.Product.SinglePaymentPrice | FlowgladNode.Customers.CustomerRetrieveBillingResponse.Catalog.Product.UsagePrice | null;
