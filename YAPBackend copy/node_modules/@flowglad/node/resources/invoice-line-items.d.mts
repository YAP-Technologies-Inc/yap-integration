import { APIResource } from "../core/resource.mjs";
import { APIPromise } from "../core/api-promise.mjs";
import { RequestOptions } from "../internal/request-options.mjs";
export declare class InvoiceLineItems extends APIResource {
    /**
     * Get Invoice Line Item
     */
    retrieve(id: string, options?: RequestOptions): APIPromise<InvoiceLineItemRetrieveResponse>;
    /**
     * List Invoice Line Items
     */
    list(query?: InvoiceLineItemListParams | null | undefined, options?: RequestOptions): APIPromise<InvoiceLineItemListResponse>;
}
/**
 * A static invoice line item, representing a fixed fee component of an invoice.
 */
export type InvoiceLineItemRetrieveResponse = InvoiceLineItemRetrieveResponse.StaticInvoiceLineItem | InvoiceLineItemRetrieveResponse.UsageInvoiceLineItem;
export declare namespace InvoiceLineItemRetrieveResponse {
    /**
     * A static invoice line item, representing a fixed fee component of an invoice.
     */
    interface StaticInvoiceLineItem {
        id: string;
        createdAt: string;
        createdByCommit: string | null;
        description: string | null;
        invoiceId: string;
        livemode: boolean;
        price: number;
        priceId: string | null;
        /**
         * safeZodPositiveInteger
         */
        quantity: number;
        type: 'static';
        updatedAt: string | null;
        updatedByCommit: string | null;
    }
    /**
     * A usage-based invoice line item, where charges are based on recorded usage
     * events.
     */
    interface UsageInvoiceLineItem {
        id: string;
        createdAt: string;
        createdByCommit: string | null;
        description: string | null;
        invoiceId: string;
        livemode: boolean;
        price: number;
        priceId: string | null;
        /**
         * safeZodPositiveInteger
         */
        quantity: number;
        type: 'usage';
        updatedAt: string | null;
        updatedByCommit: string | null;
    }
}
export interface InvoiceLineItemListResponse {
    data: Array<InvoiceLineItemListResponse.StaticInvoiceLineItem | InvoiceLineItemListResponse.UsageInvoiceLineItem>;
    hasMore: boolean;
    total: number;
    currentCursor?: string;
    nextCursor?: string;
}
export declare namespace InvoiceLineItemListResponse {
    /**
     * A static invoice line item, representing a fixed fee component of an invoice.
     */
    interface StaticInvoiceLineItem {
        id: string;
        createdAt: string;
        createdByCommit: string | null;
        description: string | null;
        invoiceId: string;
        livemode: boolean;
        price: number;
        priceId: string | null;
        /**
         * safeZodPositiveInteger
         */
        quantity: number;
        type: 'static';
        updatedAt: string | null;
        updatedByCommit: string | null;
    }
    /**
     * A usage-based invoice line item, where charges are based on recorded usage
     * events.
     */
    interface UsageInvoiceLineItem {
        id: string;
        createdAt: string;
        createdByCommit: string | null;
        description: string | null;
        invoiceId: string;
        livemode: boolean;
        price: number;
        priceId: string | null;
        /**
         * safeZodPositiveInteger
         */
        quantity: number;
        type: 'usage';
        updatedAt: string | null;
        updatedByCommit: string | null;
    }
}
export interface InvoiceLineItemListParams {
    cursor?: string;
    limit?: number;
}
export declare namespace InvoiceLineItems {
    export { type InvoiceLineItemRetrieveResponse as InvoiceLineItemRetrieveResponse, type InvoiceLineItemListResponse as InvoiceLineItemListResponse, type InvoiceLineItemListParams as InvoiceLineItemListParams, };
}
//# sourceMappingURL=invoice-line-items.d.mts.map